version: '3.8'

services:
  # PostgreSQL データベース
  postgres:
    image: postgres:15-alpine
    container_name: techblog_postgres
    environment:
      POSTGRES_DB: techblog
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - techblog_network

  # Redis (キャッシュ・セッション管理)
  redis:
    image: redis:7-alpine
    container_name: techblog_redis
    ports:
      - "6379:6379"
    networks:
      - techblog_network

  # Golang API サーバー
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: techblog_backend
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: techblog
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: your-secret-key
      PORT: 8080
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redis
    volumes:
      - ../backend:/app
    networks:
      - techblog_network
    restart: unless-stopped

  # Next.js フロントエンド
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: techblog_frontend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8080/api
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ../frontend:/app
      - /app/node_modules
    networks:
      - techblog_network
    restart: unless-stopped

  # Nginx (プロダクション用リバースプロキシ)
  nginx:
    image: nginx:alpine
    container_name: techblog_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - backend
      - frontend
    networks:
      - techblog_network
    profiles:
      - production

volumes:
  postgres_data:

networks:
  techblog_network:
    driver: bridge